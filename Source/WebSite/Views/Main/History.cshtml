@*******************************************************************************************************
//  History.cshtml - Gbtc
//
//  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  03/03/2016 - Russell Robertson
//       Generated original version of source code.
//
//*****************************************************************************************************@
@using MiPlan.Models
@using GSF
@using GSF.Web.Model
@model AppModel
@{
    DataContext dataContext = Model.DataContext;
    DataContext buContext = Model.BUDataContext;

    ViewBag.HideAddNewButton = true;
}

@*<p>To be developed.  Will enable browsing of inactive patches.  A new menu will be provided to produce complaince evenidence reports.</p>*@


@{
    ViewBag.HeaderColumns = new[]
{
        //    { "Field", "Label", "Classes" }
        new[] { "Title", "Plan Title", "text-left" },
        new[] { "BusinessUnitID", "Busness Unit", "text-left"},
        new[] { "Field1", "Title", "text-left"},
        new[] { "CreatedOn", "Plan Date", "text-center"},
        new[] { null, "Actions", "text-center valign-middle" },
        new[] { null, "Documents", "text-center valign-middle" }

    };

    ViewBag.BodyRows = BodyRows().ToString();
    ViewBag.AddNewEditDialog = AddNewEditDialog(dataContext).ToString();
    ViewBag.AddNewEditTitle = "Mitigation Plan";

}
@helper PlanFilter()
{
    <div class='row'>
        <div class='col-md-12'>
            <div class='form-group'>
                <label for='planfilter'>Plan Title Filter:</label>
                <div class='right-inner-addon'>
                    <i class='glyphicon glyphicon-search'></i>
                    <input class='form-control' type='search' id='planfilter' placeholder='Search' />
                </div>
            </div>
        </div>
    </div>
}


@helper BodyRows()
{
    <td width="15%" class="text-left valign-middle"><button type="button" class="btn btn-link" data-bind="text: Title, click: $parent.viewPageRecord"></button></td>
    <td width="15%" class="text-left valign-middle"><div nowrap data-bind="text: lookupAbbreviationValue(BusinessUnitID)"></div></td>
    <td width="65%" class="text-left valign-middle"><div nowrap data-bind="text: Field1"></div></td>
    <td width="5%" class="text-left valign-middle"><div nowrap data-bind="text: CreatedOn.formatDate(DateFormat)"></div></td>
    <td width="5%" class="text-center valign-middle"><button type="button" data-bind="click: openMenuItemEditor.bind($data), enable: $parent.dataHubIsConnected" class="btn btn-danger btn-sm">Actions&nbsp;&nbsp;<span class="badge" data-bind="text: getActionCount(ID, $($element)), attr: {id: 'actionCount' + ID}">0</span></button></td>
    <td width="5%" class="text-center valign-middle"><button type="button" class="btn btn-default btn-sm" data-bind="click: openManageDocumentsDialog.bind($data), enable: $parent.dataHubIsConnected">Docs&nbsp;&nbsp;<span class="badge" data-bind="text: getDocumentCount(ID, $($element)), attr: {id: 'documentCount' + ID}">0</span></button></td>
}
@helper AddNewEditDialog(DataContext dataContext)
{
    @Html.Raw(dataContext.AddInputField<MitigationPlan>("Title"))

    <div data-bind="visible: $parent.recordMode()==RecordMode.AddNew ||$parent.recordMode()==RecordMode.Edit ">
        <div class="form-group">
            <label for="buIDSelction">Business Unit:</label>
            <select class="form-control" id="buIDSelction"></select>
        </div>
    </div>
        <div data-bind="visible: $parent.recordMode()==RecordMode.View ">
            @Html.Raw(dataContext.AddInputField<MitigationPlan>("BusinessUnitID", fieldLabel: "Business Unit"))
        </div>

for (int i = 0; i < ViewBag.ThemeFieldCount; ++i)
{
    if (ViewBag.ThemeFields[i].Description.Contains("Date"))
    {
            @Html.Raw(dataContext.AddDateField<MitigationPlan>("Field" + (i + 1).ToString(), fieldLabel: ViewBag.ThemeFields[i].FieldName))
    }
    else
    {
            @Html.Raw(dataContext.AddTextAreaField<MitigationPlan>("Field" + (i + 1).ToString(), 2, ViewBag.ThemeFields[i].FieldName))
    }
}
    @Html.Raw(dataContext.AddTextAreaField<MitigationPlan>("Description"))
    @Html.Raw(dataContext.AddTextAreaField<MitigationPlan>("StatusNotes"))
}


@Html.Partial("PagedViewModel")

<div id="editActionItemDialog" class="modal modal-wide fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <iframe style="border: none" id="editActionItemFrame"></iframe>
                <button type="button" class="btn btn-default pull-right popup-ok-button" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

<div id="manageDocumentsDialog" class="modal modal-wide fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <iframe style="border: none" id="manageDocumentsFrame"></iframe>
                <button type="button" class="btn btn-default pull-right popup-ok-button" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        @Html.Raw(Model.RenderViewModelConfiguration<MitigationPlan>(ViewBag, "ID", "true"))
        @Html.Raw(Model.RenderAbstract<BusinessUnit>("Abbreviation", buContext))
        @Html.Raw(Model.RenderAbstract<BusinessUnit>("Name", buContext))

        function openMenuItemEditor(record) {
            //console.log(record);
            $("#editActionItemFrame").attr({
                "src": "@Url.Content("~/Main/ActionItem")?PlanID=" + record.ID + "&Title=" + encodeURIComponent(record.Title) + "&HideButton=true",
                "height": ($(document).height() - 250) + "px",
                "width": "100%"
        });

        $("#editActionItemDialog").modal("show");
        }

        function getDocumentCount(sourceID, element) {
            if (viewModel.dataHubIsConnected()) {
                dataHub.queryDocumentDetailCount("MitigationPlan", sourceID, null).done(function(count) {
                    $("#documentCount" + sourceID).text(count.toString());
                });
            }

            return element.text();
        }

        $(window).resize(function() {
            setTimeout(function() {
                $("#manageDocumentsFrame").attr("height", ($(document).height() - 150) + "px");
            }, 500);
        });

        function openManageDocumentsDialog(record) {
            const count = parseInt(notNull($("#documentCount" + record.ID).text(), 0));
            var initialMode = "";

            if (count < 1)
                initialMode = "/AddNew";

            $("#manageDocumentsFrame")
                .attr({
                    "src": "@Url.Content("~/Main/Documents")" + initialMode + "?SourceTable=MitigationPlan&SourceField=MitigationPlanID&SourceID=" + record.ID + "&Name=" + encodeURIComponent(record.Title),
                    "height": ($(document).height() - 150) + "px",
                    "width": "100%"
        });

        $("#manageDocumentsDialog").modal("show");
        }

        $("#manageDocumentsDialog").on("hidden.bs.modal", function() {
            // Refresh page counts after editing tasks
            viewModel.queryPageRecords();

            // Clear frame page
            $("#manageDocumentsFrame").attr("src", "about:blank");
        });

        function getActionCount(sourceID, element) {
            if (viewModel.dataHubIsConnected()) {
                dataHub.queryActionItemCount(sourceID, null).done(function (count) {
                    $(element).text(count.toString());
                });
            }

            return element.text();
        }

        $(function () {
            $("#pageHeader").append("@Html.Raw(PlanFilter().ToString().RemoveDuplicateWhiteSpace().Replace("\r\n", ""))");

            $('#planfilter').on('keyup', function (e) {
                if ($('#planfilter').val().length == 0) {
                    viewModel.filterText = '%';
                    viewModel.filterPageRecords();
                } else {
                    viewModel.filterText = $('#planfilter').val();
                    viewModel.filterPageRecords();

                }

            });


            $("#addNewEditDialog").on("shown.bs.modal", function () {
                $('#readonlyinputBusinessUnitID').text(lookupNameValue($('#readonlyinputBusinessUnitID').text()));
                if (viewModel.dataHubIsConnected()) {
                    dataHub.queryBusinessUnits().done(function (data) {
                        $.each(data, function (key, val) {
                            var selected = false;
                            if (key + 1 == viewModel.currentRecord().BusinessUnitID()) selected = true;
                            $('#buIDSelction').append(new Option(val.Name, val.ID, true, selected));
                        });

                    });
                }

            });

            $("#editActionItemDialog").modal({ show: false, backdrop: "static", keyboard: false });
            $("#manageDocumentsDialog").modal({ show: false, backdrop: "static", keyboard: false });
        });
    </script>
}