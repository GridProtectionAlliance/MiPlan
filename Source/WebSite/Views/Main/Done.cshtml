@*******************************************************************************************************
//  Done.cshtml - Gbtc
//
//  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  03/03/2016 - Russell Robertson
//       Generated original version of source code.
//
//*****************************************************************************************************@
@using MiPlan.Models
@using GSF
@using GSF.Web.Model
@model AppModel
@{
    DataContext dataContext = Model.DataContext;
    ViewBag.HideAddNewButton = true;
}
<p>Will allow active patches to be closed once complaince evenidence is verified.</p>
@{
    ViewBag.HeaderColumns = new[]
{
        //    { "Field", "Label", "Classes" }
        new[] { "Title", "SPM Reference", "text-left" },
        new[] { "BusinessUnitID", "Busness Unit", "text-left"},
        new[] { "Field1", "Title", "text-left"},
        new[] { null, "Actions", "text-center valign-middle" },
        new[] { null, "Close", "text-center valign-middle" }

    };

    ViewBag.BodyRows = BodyRows().ToString();

}
@helper BodyRows()
{
    <td width="15%" class="text-left valign-middle"><button type="button" class="btn btn-link" data-bind="text: Title, click: $parent.viewPageRecord"></button></td>
    <td width="15%" class="text-left valign-middle"><div nowrap data-bind="text: lookupNameValue(BusinessUnitID)"></div></td>
    <td width="60%" class="text-left valign-middle"><div nowrap data-bind="text: Field1"></div></td>
    <td width="5%" class="text-center valign-middle"><button type="button" id="newWindow" data-bind="click: openMenuItemEditor.bind($data), enable: $parent.dataHubIsConnected" class="btn btn-danger btn-sm">View</button></td>
    <td width="5%" class="text-center valign-middle"><button type="button" id="newWindow" data-bind="click: closePlan.bind($data)" class="btn btn-danger btn-sm">Close</button></td>

}
@Html.Partial("PagedViewModel")

<div id="editActionItemDialog" class="modal modal-wide fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <iframe style="border: none" id="editActionItemFrame"></iframe>
                <button type="button" class="btn btn-default pull-right popup-ok-button" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        @Html.Raw(Model.RenderViewModelConfiguration<PlansActionCompletedView>(ViewBag))
        @Html.Raw(Model.RenderAbstract<BusinessUnit>("Name"))


        function closePlan(record) {
            dataHub.completeUncompletedMitigationPlan(record);
            viewModel.queryPageRecords();
        }

        function openMenuItemEditor(record) {
            //console.log(record);
            $("#editActionItemFrame").attr({
                "src": "@Url.Content("~/Main/ActionItem")?PlanID=" + record.ID + "&Title=" + encodeURIComponent(record.Title),
                "height": ($(document).height() - 250) + "px",
                "width": "100%"
        });

        $("#editActionItemDialog").modal("show");
        }

        $("#editActionItemDialog").on("hidden.bs.modal", function () {
            // Refresh page counts after editing tasks
            viewModel.queryPageRecords();

            // Clear frame page
            $("#editActionItemFrame").attr("src", "about:blank");
        });

        $(function () {
            $("#editActionItemDialog").modal({ show: false, backdrop: "static", keyboard: false });
        });
    </script>
}