@*******************************************************************************************************
//  Plan.cshtml - Gbtc
//
//  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  03/03/2016 - Russell Robertson
//       Generated original version of source code.
//
//*****************************************************************************************************@
@using GSF.Web.Model
@using MiPlan.Models
@model AppModel
@{
    DataContext dataContext = Model.DataContext;
   
}
<p>&nbsp;</p>
<ul>
    <li>A list of "open" mitigation plans will be displayed.</li>
    <li>A filter will be available at the top of the screen for "Business Unit" and default to the BUCs or SMEs BU -- or to "all" for everyone else.</li>
    <li>There can be multiple plans available for each patch.</li>
    <li>The list will be sorted by patchID (the TVA assigned label), BUG, and title.</li>
    <li>An SPM can create a new plan for this patch for their BU.  Only one plan per BUgroup per patch is allowed.</li>
    <li>A BUC can delete a plan for their BUG provided they have not approved it.  Following plan approval, only the Owner can remove it.  It will be marked as deleted in the database -- but will have no GUI tools available to retrieve it -- since there 
    can only be one plan per patch per BUG.</li>
    <li>Unfortunately, if a plan is required then this plan is for this BUG only.  If it turns out there is a common plan that is shared among BUs, then this plan must be replicated since the action items for execution of the plan are assigned the BUG
    that owns it.</li>
    <li>The BUC must approve the plan as a whole to stop the compliance timer.</li>
    <li>A BUC can add or remove action items in a Plan following approval without compliance impact.</li>
  

</ul>
<p>&nbsp;</p>
<table class="table">
    <thead>
        <tr>
            <th>&nbsp;</th>
            <th>Required Fields</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>1</td>
            <td>Patch Identifier</td>
        </tr>
        <tr>
            <td>2</td>
            <td>Justification</td>
        </tr>
        <tr>
            <td>3</td>
            <td>Summary</td>
        </tr>
       
    </tbody>
</table>
<p>&nbsp;</p>
<table class="table">
    <thead>
        <tr>
            <th>&nbsp;</th>
            <th>Optional Fields</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>1</td>
            <td>Risk</td>
        </tr>
        <tr>
            <td>2</td>
            <td>Detail</td>
        </tr>
       
    </tbody>
</table>

@{
    ViewBag.HeaderColumns = new[]
{
        //    { "Field", "Label", "Classes" }
        new[] { null, "Status", "text-center valign-middle"},
        new[] { "Title", "SPM Reference", "text-left" },
        new[] { "BusinessUnitID", "Busness Unit", "text-left"},
        new[] { "Field1", "Title", "text-left"},
        new[] { null, "Actions", "text-center valign-middle" }

    };

    ViewBag.BodyRows = BodyRows().ToString();
    ViewBag.AddNewEditDialog = AddNewEditDialog(dataContext).ToString();
    ViewBag.AddNewEditTitle = "MitigationPlan";

}
@helper BodyRows()
{

    <td width="5%" class="text-left valign-middle"></td>
    <td width="15%" class="text-left valign-middle"><button type="button" class="btn btn-link" data-bind="text: Title, click: $parent.viewPageRecord"></button></td>
    <td width="15%" class="text-left valign-middle"><div nowrap data-bind="text: lookupNameValue(BusinessUnitID)"></div></td>
    <td width="50%" class="text-left valign-middle"><div nowrap data-bind="text: Field1"></div></td>
    <td width="10%" class="text-center valign-middle"><button type="button" id="newWindow" data-bind="click: openMenuItemEditor.bind($data), enable: $parent.dataHubIsConnected" class="btn btn-danger btn-sm">View</button></td>
    <td width="5%" class="text-center valign-middle" nowrap>
        <button type="button" class="btn btn-xs" data-bind="click: $parent.editPageRecord, enable: $parent.canEdit() && $parent.dataHubIsConnected()"><span class="glyphicon glyphicon-pencil"></span></button>
        <button type="button" class="btn btn-xs" data-bind="click: $parent.removePageRecord, enable: $parent.canDelete() && $parent.dataHubIsConnected()"><span class="glyphicon glyphicon-remove"></span></button>
    </td>
}

@helper AddNewEditDialog(DataContext dataContext)
{

    <div class="col-md-12">

        @Html.Raw(dataContext.AddInputField<MitigationPlan>("Title"))
        @Html.Raw(dataContext.AddSelectField<MitigationPlan, BusinessUnit>("BusinessUnitID", "ID", "Name"))
        @for (int i = 0; i < ViewBag.ThemeFieldCount; ++i)
        {

            @Html.Raw(dataContext.AddTextAreaField<MitigationPlan>("Field" + (i + 1).ToString(), 2, ViewBag.ThemeFields[i].FieldName))
        }
        @Html.Raw(dataContext.AddTextAreaField<MitigationPlan>("Description"))
        @Html.Raw(dataContext.AddTextAreaField<MitigationPlan>("StatusNotes"))
    </div>
}
@Html.Partial("PagedViewModel")

<div id="editActionItemDialog" class="modal modal-wide fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <iframe style="border: none" id="editActionItemFrame"></iframe>
                <button type="button" class="btn btn-default pull-right popup-ok-button" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        @Html.Raw(Model.RenderViewModelConfiguration<MitigationPlan>(ViewBag))
        @Html.Raw(Model.RenderAbstract<BusinessUnit>("Name"))

        function getActionItemCount(pageID, element) {
            console.log(PageID);
            if (viewModel.dataHubIsConnected()) {
                dataHub.queryActionItemCount(pageID).done(function (count) {
                    const actionItemMode = $("#actionItemMode" + pageID);
                    const actionItemCount = $("#actionItemCount" + pageID);
                    const modeText = count > 0 ? "Edit" : "Add";

                    if (actionItemMode.text() !== modeText)
                        actionItemMode.text(modeText);

                    if (actionItemCount.text() !== count.toString())
                        actionItemCount.text(count.toString());
                });
            }

            return element.text();
        }

        $(window).resize(function () {
            setTimeout(function () {
                $("#editMenuItemFrame").attr("height", ($(document).height() - 150) + "px");
            }, 500);

        });

        function openMenuItemEditor(record) {
            //console.log(record);
            $("#editActionItemFrame").attr({
                "src": "@Url.Content("~/Main/ActionItem")?PlanID=" + record.ID + "&Title=" + encodeURIComponent(record.Title),
                "height": ($(document).height() - 150) + "px",
                "width": "100%"
        });

        $("#editActionItemDialog").modal("show");
        }

        $("#editActionItemDialog").on("hidden.bs.modal", function () {
            // Refresh page counts after editing tasks
            viewModel.queryPageRecords();

            // Clear frame page
            $("#editActionItemFrame").attr("src", "about:blank");
        });

        $(function() {
            $("#editActionItemDialog").modal({ show: false, backdrop: "static", keyboard: false });
        });
    </script>
}
